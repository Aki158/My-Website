●index.html
[職務経歴書]
・名前
    小林弘明
・更新日
    [ToDo]毎日updateはしないから固定値でいいかも。
・概要
    高校卒業後に短期大学校(在籍期間:2年)に進学しました。
    ここでは、電子情報技術科を専攻し通信、ハードウェア、ソフトウェアの基礎を学びました。
    その後、2018年4月にD社に入社し組み込みエンジニアとして車載開発に関わる業務を5年程担当しました。
    また、通常業務以外の活動として2022年6月からRecursion(コンピュータサイエンスを基礎から学べる学習プラットフォーム)
    での自己学習を開始しました。
    学習の成果の詳細は、個人開発のPortfolioを参照してください。
・個人開発
    →portfolio.htmlに遷移する
・通常業務以外の活動記録
    https://github.com/Aki158/weekly-report
・プログラミングスキル
    実務
        ・C言語
            ・実務経験3年
            ・簡易的なプログラムを作成できる
            ・プロダクトのソースコードを理解し作業できる
        ・MATLAB(Simulink)
            ・実務経験半年
            ・Simulinkのモデルが仕様通りか理解し作業できる
    独学(期間:1年)
        ・Java、Python、PHP、JavaScript、HTML/CSS、C++
            ・チーム開発の経験、個人での開発経験、コーディング問題：370問提出
・自己PR
    実務
        5年間の実務経験の中で最も印象に残ったプロジェクトを紹介します。
        このプロジェクトでは、C言語を使用した車載開発(カーエアバッグ開発)を担当しました。
        最初はテストから経験しテスト設計、実装、設計というように下流工程から上流工程へステップアップさせました。
        プロジェクトを通して実務でのソフトウェア開発の振る舞い方や自分なりの仕事の進め方を構築できました。
        また、プロジェクトはチーム全体での稼働が常に高く前担当者との業務引き継ぎ不足など問題を抱えていました。
        解決策としては、業務を通して学んだノウハウを自分が次のプロダクト開発に異動した場合でもメンバーが業務遂行できるように
        手順書・マニュアルの作成を自主的に提案しチームメンバーへ資料を展開しました。
        技術だけでなくコミュニケーションにも力を入れました。
        メンバーとコミュニケーションを積極的にとるようにし手順書・マニュアルだけではわかりずらいことでも質問しやすい雰囲気を作ることにも努めました。
    独学
        実務で培ったプログラムや仕様書を読み理解する力をレベルアップさせるためにRecursionで自己学習をしました。
        Recursionでは、コンピュータサイエンスという学問を通して基礎的な力を身につけました。
        この力をつけることで実務で使用していたC言語だけでなく複数の言語を扱うことができるようになり
        チーム開発や個人開発でアプリケーションを自力で作成できるまでスキルがつきました。
        Recursionでは、アウトプットを重視しておりコーディング問題をたくさん解きアウトプットしていく必要があります。
        JavaやPythonといった言語でコースを進めコーディング問題を解きました。
        コーディング問題を解くだけで終わらせず、ユーザーへの質問に回答できるようになるまで理解を深めるようにしました。
        質問回答時には、Discordで主に回答していましたがあえてコミュニケーションツールとしてOviceを使用し説明することもありました。
        以下のような理由がありました。
            ・質問者が初学者の場合やうまく質問を言語化できていないなどの問題点の解消
            ・画面共有して説明することでイメージを伝えられているという実感
            ・質問者からフィードバックをもらえることでの質の向上
        また、Recursionで学習していく中でユーザー同士の横のつながりが弱いことに気づき、エンジニアのコミュニティをDiscordサーバーで立ち上げました。
        ここでは、もくもく会やユーザー同士の交流会、チーム開発などユーザー同士の横のつながりと学習の習慣作りを目的としたイベントを開催しました。
        これらから業務外の自己学習やアウトプット、コミュニティー内での主体的に動ける力があります。
・活かせる経験・知識・技術
    ・基本設計〜テストまでを1人で実施した経験
    ・テスト設計経験
    ・テスト実施用にテストコードを書いた経験
    ・業務外でのコーディング問題の質問回答、レクチャーした教育の経験
    ・エンジニアコミュニティーを1から企画し50名程のメンバーがいるDiscordサーバーを運用した経験
・職務経歴
    公開できない情報は、仮の名称を記載します。
    正式な職務経歴は応募時に提出させていただきます。

    2018年4月～2023年10月　D社
    プロジェクト毎に記載していますが、D社のみでの経験です
        期間
            2022年10月～2023年10月
        プロジェクト内容
            【概要】
            ・MATLAB_Simulinkのモデルからオートコードを生成する業務
            ・オートコードにより生成されたプログラムのテスト業務

            【課題】
            ・定型作業の手順書不足
            ・新人の教育体制が不十分

            【工夫点】
            ・メンバーから教育された内容を理解し手順書に落とし込む
            ・新人教育体制充実のためにチェックリスト作成を提案

            【成果】
            ・定型業務の手順書
            ・オートコード生成後の生成ファイル納品
            ・モデルとソースコードの1対1確認後のテスト結果の納品

        期間
            2022年06月～2022年10月
        プロジェクト内容
            【概要】
            ■研修
            ・言語基礎学習(MATLAB、C言語、Python)
            ・カーエンジンの基礎知識

        期間
            2020年04月～2022年06月
        プロジェクト内容
            概要
            ・カーエアバッグ(EDR)開発

            【課題】
            ・テスト設計ができるメンバーが不足していた
            ・テストの手順に誤記があった

            【工夫点】
            ・テスト設計経験を活かしてメンバーへ設計観点やアウトプットのイメージを共有した
            ・手順の誤記は、次回以降の工数削減のためテスト実施と同時に手順を整備した

            【成果】
            ・設計資料、実装後のソースコード
            ・仕様を満たすテスト項目の設計
            ・EDRとして仕様通りの記録をしているかのテスト結果

        期間
            2019年12月～2020年03月
        概要
            ■研修
            ・言語基礎学習(C言語、VBA)
            ・カーエアバッグの基礎知識

        期間
            2018年06月～2019年12月
        概要
            ・カーエアコン仕様書発行業務

            【課題】
            ・納品する仕様書の誤字脱字が多かった

            【工夫点】
            ・チェックシートを運用しクロスチェックまで実施した仕様書のみ納品するようにした

            【成果】
            ・カーエアコン仕様書
            ・仕様書通りの動作を実機で確認後のテスト結果

        期間
            2018年04月～2018年06月
        概要
            ■研修
            ・言語基礎学習(C言語)
            ・カーエアバッグの基礎知識
            ・マナー研修
            ・Excel、Word基礎

●portfolio.html
[ポートフォリオ]
    [チーム開発]Online-Chat-Messenger
        ID(id)
            1
        プロジェクト名(title)
            [チーム開発]Online-Chat-Messenger
        言語(langage)
            Python
        概要(summary)
            リアルタイムでのグループチャットを手軽に行えるアプリケーションです。
        説明(content)
            Online-Chat-Messengerは、リアルタイムでのグループチャットを手軽に行えるアプリケーションです。
            ユーザーは必要な情報を入力しチャットルームの作成か既存のチャットルームへの参加ができます。
            チャットルームに入ったあとは、他のユーザーとグループチャットでコミュニケーションをとることができます。
            このプロジェクトは、チームで開発しました。
            実装はTCPとUDP、それぞれのクライアントとサーバでタスクを分けることができました。
            アプリケーションの実装はすべてPythonで行いました。
            チーム開発では、リーダーを担当したため、仕様を整理してからメンバーとタスクを分担しました。
            私は主にTCPのクライアントとUDPのクライアント/サーバーを担当しました。
            このプロジェクトでは、TCP/UDPの理解とチーム開発でのリーダー経験を積むことができました。
        ソースコードのURL(source)
            https://github.com/Recursion-Group-Backend-c/Online-Chat-Messenger
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    PlantUML-Server
        ID(id)
            2
        プロジェクト名(title)
            PlantUML-Server
        言語(langage)
            HTML/CSS/JavaScript/PHP
        概要(summary)
            ソフトウェアエンジニアのためのアプリケーションでUML問題集を提供します。
        説明(content)
            PlantUML-Serverは、ソフトウェアエンジニアのためのアプリケーションでUML問題集を提供します。
            ユーザーはUML問題集の中から練習したい問題を選び、問題を解くことでPlantUMLについての理解を深められます。
            このプロジェクトは、一人ですべての開発を行いました。
            フロントエンドは、HTML/CSS/JavaScriptを使用しJSONファイルを読み込むことでUML問題集のテーブルや問題の表示を管理しました。
            バックエンドは、PHPを使用しPreviewやチートシートとして表示するファイルを生成させました。
            このプロジェクトでは、UML問題集と問題ページ間を遷移させる際のデータの受け渡し方を学ぶことができました。
        ソースコードのURL(source)
            https://github.com/Aki158/PlantUML-Server
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Markdown-to-HTML
        ID(id)
            3
        プロジェクト名(title)
            Markdown-to-HTML
        言語(langage)
            HTML/CSS/JavaScript/PHP/Python
        概要(summary)
            ブラウザ上でMarkdownからHTMLへ変換するアプリケーションです。
        説明(content)
            Markdown-to-HTMLは、ブラウザ上でMarkdownからHTMLへ変換するアプリケーションです。
            ユーザーは、エディタにMarkdownを記述するとリアルタイムでPreviewにHTMLが表示されます。
            このプロジェクトは、一人ですべての開発を行いました。
            フロントエンドは、HTML/CSS/JavaScriptを使用しブラウザ上で作業を完結できるようなウェブデザインにしました。
            バックエンドは、PHP/Pythonを使用しMarkdownからHTMLへ変換させる処理を実装しています。
            このプロジェクトでは、リアルタイムを実現させるための非同期処理の基本を学ぶことができました。
        ソースコードのURL(source)
            https://github.com/Aki158/Markdown-to-HTML
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Restaurant-Chain-Mockup-Extension
        ID(id)
            4
        プロジェクト名(title)
            Restaurant-Chain-Mockup-Extension
        言語(langage)
            HTML/CSS/PHP
        概要(summary)
            ユーザーがフォームを入力し、レストランチェーン企業のモックアップページを出力させるアプリケーションです。
        説明(content)
            Restaurant-Chain-Mockup-Extensionは、ユーザーがフォームを入力し、レストランチェーン企業のモックアップページを出力させるアプリケーションです。
            ユーザーは入力フォームより必要な情報を入力し、入力情報をもとにレストランチェーン企業のモックアップページが生成されます。
            このプロジェクトは、Restaurant-Chain-Mockupの拡張版で一人ですべての開発を行いました。
            フロントエンドは、HTML/CSSを使用し入力フォームをデザインを追加しました。
            バックエンドは、PHPを使用し入力情報を条件として表示させる処理を実装しています。
            このプロジェクトでは、オブジェクト指向で実装されたプログラムを拡張する経験と入力フォームから送信されたPOSTリクエストの処理方法を学ぶことができました。
        ソースコードのURL(source)
            https://github.com/Aki158/Restaurant-Chain-Mockup-Extension
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Restaurant-Chain-Mockup
        ID(id)
            5
        プロジェクト名(title)
            Restaurant-Chain-Mockup
        言語(langage)
            HTML/CSS/PHP
        概要(summary)
            レストランチェーン企業のモックアップページを出力させるアプリケーションです。
        説明(content)
            Restaurant-Chain-Mockupは、レストランチェーン企業のモックアップページを出力させるアプリケーションです。
            このプロジェクトは、一人ですべての開発を行いました。
            フロントエンドは、HTML/CSSを使用しデザインとしてアコーディオンをとりいれました。
            バックエンドは、PHPを使用しFakerを使用して生成された偽の情報を入力として表示させる処理を実装しています。
            このプロジェクトでは、オブジェクト指向のアプローチによるメンテナンスの容易さを意識した実装の経験が得られました。
        ソースコードのURL(source)
            https://github.com/Aki158/Restaurant-Chain-Mockup
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Food-Service-Simulation
        ID(id)
            6
        プロジェクト名(title)
            Food-Service-Simulation
        言語(langage)
            PHP
        概要(summary)
            簡易的なレストランの注文システムです。
        説明(content)
            Food-Service-Simulationは、簡易的なレストランの注文システムです。
            このプロジェクトは、一人ですべての開発を行いました。
            PHPを使用しクラス毎にファイルを分け、オブジェクト指向プログラミングの四大柱(カプセル化、抽象化、継承、ポリモーフィズム)
            に関わるコードを書きました。
            このプロジェクトでは、PHPの基本的な文法とオブジェクト指向プログラミングの理解を深めました。
        ソースコードのURL(source)
            https://github.com/Aki158/Food-Service-Simulation
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Resume-Website
        ID(id)
            7
        プロジェクト名(title)
            Resume-Website
        言語(langage)
            HTML/CSS/JavaScript
        概要(summary)
            職務経歴書とポートフォリオの静的ウェブサイトです。
        説明(content)
            Resume-Websiteは、職務経歴書とポートフォリオの静的ウェブサイトです。
            ユーザーは、職務経歴書とポートフォリオを見ることができます。
            今見ているウェブサイトは、このプロジェクトで作成したポートフォリオになります。
            このプロジェクトは、一人ですべての開発を行いました。
            このプロジェクトでは、HTML/CSS/JavaScriptで静的なウェブサイトを作成し自身のサーバーにデプロイする経験が得られました。
        ソースコードのURL(source)
            https://github.com/Aki158/Resume-Website
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Video-Compressor-Service 
        ID(id)
            8
        プロジェクト名(title)
            Video-Compressor-Service
        言語(langage)
            Python
        概要(summary)
            動画を圧縮し、異なるフォーマットや解像度に変換することができるアプリケーションです。
        説明(content)
            Video-Compressor-Serviceは、動画を圧縮し、異なるフォーマットや解像度に変換することができるアプリケーションです。
            ユーザーは動画をフォルダに格納しCLIの記載に従って進めるだけで、サービスを利用できます。
            このプロジェクトは、一人ですべての開発を行いました。
            サーバーサイドではFFMPEGライブラリを使用し言語はPythonを利用してすべてのサービスを実現させています。
            このプロジェクトでは、TCP/UDPを利用したサービスの理解を深めることができました。
        ソースコードのURL(source)
            https://github.com/Aki158/Video-Compressor-Service
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Remote-Procedure-Call
        ID(id)
            9
        プロジェクト名(title)
            Remote-Procedure-Call
        言語(langage)
            Python、JavaScript(Node.js)
        概要(summary)
            クライアントとサーバで異なる言語の場合クライアントプログラムがサーバ上の機能を呼び出せるシステムです。
        説明(content)
            Remote-Procedure-Callは、クライアント(JavaScript)とサーバ(Python)で異なる言語の場合クライアントプログラムがサーバ上の機能を呼び出せるシステムです。
            リクエストとレスポンスはJSON形式のメッセージでやりとりします。
            クライアントからサーバにリクエストして、サーバはクライアントから受け取った情報をもとにサーバ上の機能を実行しレスポンスを返します。
            このプロジェクトは、一人ですべての開発を行いました。
            このプロジェクトでは、これまでPythonを中心に学習を進めてきたので、JavaScript(Node.js)でできることを理解し
            異なる言語でデータをやりとりする仕組みを学べました。
        ソースコードのURL(source)
            https://github.com/Aki158/Remote-Procedure-Call
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Local-Chat-Messenger
        ID(id)
            10
        プロジェクト名(title)
            Local-Chat-Messenger
        言語(langage)
            Python
        概要(summary)
            UDP通信を用いて、クライアント/サーバ感でのデータ送受信を行えるアプリケーションです。
        説明(content)
            Local-Chat-Messengerは、UDP通信を用いて、クライアント/サーバ間でのデータ送受信を行えるアプリケーションです。
            このプロジェクトは、一人ですべての開発を行いました。
            このプロジェクトでは、Pythonを利用しlocal環境でのTCP/UDP通信の基本を理解し実装する経験を得られました。
        ソースコードのURL(source)
            https://github.com/Aki158/Local-Chat-Messenger
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Markdown-to-HTML-Converter
        ID(id)
            11
        プロジェクト名(title)
            Markdown-to-HTML-Converter
        言語(langage)
            Python
        概要(summary)
            MarkdownからHTMLへ変換するアプリケーションです。
        説明(content)
            Markdown-to-HTML-Converterは、MarkdownからHTMLへ変換するアプリケーションです。
            ユーザーは、マークダウンファイル(.md)を作成しこのアプリケーションを利用することで
            HTML版のファイルをダウンロードできます。
            このプロジェクトは、一人ですべての開発を行いました。
            CLI上でコマンドを入力する必要がありますが、入力が適切かチェックする機能も実装しています。
            このプロジェクトでは、Pythonを利用しファイルの読み書きや初めて利用するmarkdownライブラリの機能について学べました。
        ソースコードのURL(source)
            https://github.com/Aki158/Markdown-to-HTML-Converter
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する
    
    File-Manipulator-Program
        ID(id)
            12
        プロジェクト名(title)
            File-Manipulator-Program
        言語(langage)
            Python
        概要(summary)
            CLI上で実行できるコマンドとその機能を提供するスクリプトです。
        説明(content)
            File-Manipulator-Programは、CLI上で実行できるコマンドとその機能を提供するスクリプトです。
            このプロジェクトは、一人ですべての開発を行いました。
            CLI上でコマンドを入力する必要がありますが、このコマンドを引数として受け取りPythonで処理しています。
            Pythonの組み込み関数を使用することで実装を容易にしています。
            このプロジェクトでは、ユーザーに提供できるサービスを初めて作成する体験が得られました。
        ソースコードのURL(source)
            https://github.com/Aki158/File-Manipulator-Program
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

    Guess-the-number-game
        ID(id)
            13
        プロジェクト名(title)
            Guess-the-number-game
        言語(langage)
            Python
        概要(summary)
            数字を入力して推測するゲームです。
        説明(content)
            Guess-the-number-gameは、数字を入力して推測するゲームです。
            ユーザーに2つの数字を入力してもらい、その数字の範囲内で乱数を生成します。
            ユーザーは生成された数字を推測し、ヒントをもとに正解に近づけていきます。
            このプロジェクトは、一人ですべての開発を行いました。
            このプロジェクトでは、UbuntuとPythonが利用できる環境の構築とPythonの基本を理解し
            アウトプットすることができました。
        ソースコードのURL(source)
            https://github.com/Aki158/Guess-the-number-game
        添付資料(thumbnail)
            [ToDo]gifか画像を用意する

        
    